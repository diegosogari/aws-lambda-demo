name: Deploy service to AWS Lambda

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy-to-aws.yml'
      - '**.py'
      - '!**_test.py'
      - 'requirements.txt'

jobs:
  package-and-upload:
    name: Package the code and upload it to Amazon S3
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      S3_BUCKET: lambda-20231102013812622900000001
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: paths
        with:
          filters: |
            command_handler:
              - 'command_handler.py'
            event_consumer:
              - 'event_consumer.py'
            event_publisher:
              - 'event_publisher.py'
            request_handler:
              - 'request_handler.py'
            library:
              - '*/**.py'
            dependencies:
              - 'requirements.txt'
      - uses: actions/setup-python@v4.7.1
        with:
          python-version: '3.10'
          cache: 'pip'
      - uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::574563284495:role/gha
      - run: sudo apt install -y zip
      - run: pip install -r requirements.txt
      - run: python -m py_compile *.py

      - if: steps.paths.outputs.command_handler == 'true'
        name: Package and upload the command handler
        run: |
          zip -r command_handler.zip command_handler.py
          aws s3api put-object --bucket $S3_BUCKET --key functions/demo/command_handler.zip --body command_handler.zip --checksum-algorithm SHA256

      - if: steps.paths.outputs.event_consumer == 'true'
        name: Package and upload the event consumer
        run: |
          zip -r event_consumer.zip event_consumer.py
          aws s3api put-object --bucket $S3_BUCKET --key functions/demo/event_consumer.zip --body event_consumer.zip --checksum-algorithm SHA256

      - if: steps.paths.outputs.event_publisher == 'true'
        name: Package and upload the event publisher
        run: |
          zip -r event_publisher.zip event_publisher.py
          aws s3api put-object --bucket $S3_BUCKET --key functions/demo/event_publisher.zip --body event_publisher.zip --checksum-algorithm SHA256

      - if: steps.paths.outputs.request_handler == 'true'
        name: Package and upload the request handler
        run: |
          zip -r request_handler.zip request_handler.py
          aws s3api put-object --bucket $S3_BUCKET --key functions/demo/request_handler.zip --body request_handler.zip --checksum-algorithm SHA256

      - if: steps.paths.outputs.library == 'true'
        name: Package and upload the library
        run: |
          zip -r library.zip */* -i *.py -x *_test.py
          aws s3api put-object --bucket $S3_BUCKET --key layers/demo/library.zip --body library.zip --checksum-algorithm SHA256

      - if: steps.paths.outputs.dependencies == 'true'
        name: Package and upload the dependencies
        run: |
          pip install -r requirements.txt --target python --platform manylinux2014_x86_64 --only-binary :all:
          zip -r dependencies.zip python
          aws s3api put-object --bucket $S3_BUCKET --key layers/demo/dependencies.zip --body dependencies.zip --checksum-algorithm SHA256
